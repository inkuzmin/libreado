// Generated by CoffeeScript 1.7.1
(function() {
  var User, app, config, express, locale, mongoose, path, pub, url, user,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  express = require("express");

  path = require("path");

  locale = require("locale");

  url = require("url");

  user = require(path.join(__dirname, "/models/user.js"));

  mongoose = require("mongoose");

  mongoose.connect("mongodb://localhost/ololo", function(err) {
    return console.log(err);
  });

  config = require("" + __dirname + "/public/app/config.js");

  User = user(config, mongoose);

  User.createUser("testlol");

  app = express();

  pub = path.join(__dirname, "/public");

  app.use(express["static"](pub));

  locale.Locale["default"] = config.lang["default"];

  app.use(locale(config.lang.supported));

  app.set("views", "" + __dirname + "/views");

  app.set("view engine", "jade");

  app.get("/account/authenticated", function(q, s) {
    return s.status(400).send('Not found');
  });

  app.get("/:lang/*", function(req, res) {
    var lang, _ref;
    lang = (_ref = req.params.lang, __indexOf.call(config.lang.supported, _ref) >= 0) ? req.params.lang : req.locale;
    return res.render("index", {
      "lang": lang
    });
  });

  app.get("*", function(req, res) {
    return res.render("index", {
      "lang": req.locale
    });
  });

  app.use(function(err, req, res, next) {
    return res.send(err.stack);
  });

  if (!module.parent) {
    app.listen(3000);
    console.log('Express started on port 3000');
  } else {
    module.exports = app;
  }

}).call(this);

//# sourceMappingURL=index.map
